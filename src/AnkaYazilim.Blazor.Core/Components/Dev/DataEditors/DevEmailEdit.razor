@inherits DevBaseEditor

<DxGridLayoutItem Column="ColumnIndex"
                  Row="RowIndex"
                  ColumnSpan="ColumnSpan"
                  CssClass="@LayoutItemCssClass"
                  RowSpan="RowSpan"
                  Visible="Visible">
    <Template>
        <DxMaskedInput @ref="_dxMaskedInput"
                       @bind-Value="@Value"
                       CssClass="@EditorCssClass"
                       Enabled="Enabled"
                       InputCssClass="InputCssClass"
                       ReadOnly="ReadOnly"
                       Mask="@(@"(\w|[.-])+@(\w|-)+\.(\w|-){2,4}")"
                       MaskMode="MaskMode.RegEx">
        </DxMaskedInput>
    </Template>
</DxGridLayoutItem>

<DevLabel Caption="@Caption"
          ColumnIndex="ColumnIndex-2"
          CssClass="@CaptionCssClass"
          RowIndex="RowIndex"
          Visible="Visible && CaptionVisible">
</DevLabel>

<DevLabel Caption="@SeperateCaption"
          ColumnIndex="ColumnIndex-1"
          CssClass="@CaptionCssClass"
          RowIndex="RowIndex"
          Visible="Visible && SeperateCaptionVisible">
</DevLabel>







@code {
    private DxMaskedInput<string> _dxMaskedInput;
    private string _value;
      
    [Parameter] public EventCallback<string> ValueChanged { get; set; }

  

    [Parameter]
    public string Value
    {
        get => _value;
        set
        {
            if (_value == value) return;
            _value = value;
            ValueChanged.InvokeAsync(value);
        }
    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (IsFocus && Visible && firstRender)
            await _dxMaskedInput.FocusAsync();
    }
}
